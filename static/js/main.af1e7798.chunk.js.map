{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","upText","toUpperCase","showAlert","lowText","toLowerCase","newText","split","map","currentValue","slice","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af1e7798.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { a } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <a className=\"nav-a\" to=\"/about\">\r\n                {props.aboutText}\r\n              </a> */}\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About Text here\",\r\n};\r\n","import React, { useState} from 'react'\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase button was clicked\");\r\n        let upText = text.toUpperCase();\r\n        setText(upText);\r\n        props.showAlert(\"Coverted to Upper Case !!\",\"success\");\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let lowText = text.toLowerCase();\r\n        setText(lowText);\r\n        props.showAlert(\"Coverted to Lower Case !!\",\"success\");\r\n    }\r\n\r\n    const handleCapClick = ()=>{\r\n        let newText = text.split(\" \").map((currentValue) =>{\r\n            let newText = currentValue[0].toUpperCase() + currentValue.slice(1);\r\n            return newText;\r\n        });\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Coverted to Capitalized Case !!\",\"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let clrText = '';\r\n        setText(clrText);\r\n        props.showAlert(\"Cleared All !!\",\"success\");\r\n    }\r\n\r\n    const handleCopy = ()=> {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied !!\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // let wordLength;\r\n    // if (text===\"\") {\r\n    //     wordLength=0;\r\n    // }\r\n    // else{\r\n    //     wordLength=text.split(\" \").length;\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To Upper Case</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLowClick}>Convert To Lower Case</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleCapClick}>Capitalized Case</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleClearClick}>Clear All</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Summary</h1>\r\n            <p>{((text.split(\" \")).filter(function (element) {\r\n                    return element !== \"\";\r\n                })).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read above content</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in text box to preview it\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type)=> {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#0f192e';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter the text to analyze\" showAlert={showAlert} mode={mode} />\n          {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n    {/* </Router>   */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}